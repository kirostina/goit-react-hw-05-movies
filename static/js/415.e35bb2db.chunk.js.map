{"version":3,"file":"static/js/415.e35bb2db.chunk.js","mappings":"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","sources":["components/API.jsx","components/MoviesItem.jsx","components/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '5e62883d384bb853659cb1443acda972';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nexport async function fetchBySearchMovies(inputValue) {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${inputValue}&api_key=${KEY}`);\n    return data.results;\n } catch(error) {}\n};\n\n\nexport async function fetchTrendMovies(page = 1) {\n  try {\n    const { data } = await axios.get(`/trending/movie/week?api_key=${KEY}&page=${page}&language=en`);\n    return data.results;\n  }catch(error) {}\n};\n\n\nexport async function fetchById(id) {\n  try {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY}`)\n    return data;\n  }catch (error) {}\n};\n\n\nexport async function fetchCastInfo(id) {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${KEY}`)\n    return data.cast;\n  } catch (error) {}\n};\n\n\nexport async function fetchReviews(id) {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`)\n    return data.results;\n  } catch (error) {}\n};","import PropTypes from \"prop-types\";\n\n\nexport const MoviesItem = ({ poster_path, title, vote_average,release_date }) => {\n  const postImg = 'https://image.tmdb.org/t/p/w500';\n  let imgUrl = postImg + poster_path;\n  if (poster_path === null) {\n    imgUrl = 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg';\n  }\n  return (\n    <>\n      <h1>{title} {release_date.slice(0,4)}</h1> \n      <img src={imgUrl} alt={title} />\n      <p>Rating: {vote_average}</p>\n    </>\n );\n};\n\n\nMoviesItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n};","\nimport { Link, useLocation } from \"react-router-dom\";\nimport { MoviesItem } from \"./MoviesItem\";\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      {movies && movies.map(({id, title, vote_average, poster_path, release_date }) => (\n          <div key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviesItem title={title} poster_path={poster_path} vote_average={vote_average} release_date={release_date} />\n            </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { fetchTrendMovies } from \"../components/API\";\nimport { MoviesList } from \"../components/MoviesList\";\nimport { useState, useEffect } from \"react\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendMovies().then(data => {\n      setMovies([...data]);\n    });\n  }, []);\n  \n  return (\n    <main>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;"],"names":["KEY","fetchBySearchMovies","_x","_fetchBySearchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","inputValue","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","results","t0","stop","fetchTrendMovies","_fetchTrendMovies","_callee2","page","_yield$axios$get2","_args2","_context2","length","undefined","fetchById","_x2","_fetchById","_callee3","id","_yield$axios$get3","_context3","fetchCastInfo","_x3","_fetchCastInfo","_callee4","_yield$axios$get4","_context4","cast","fetchReviews","_x4","_fetchReviews","_callee5","_yield$axios$get5","_context5","MoviesItem","_ref","poster_path","title","vote_average","release_date","imgUrl","_jsxs","_Fragment","children","slice","_jsx","src","alt","MoviesList","movies","location","useLocation","map","_ref2","Link","to","state","from","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","then","_toConsumableArray"],"sourceRoot":""}